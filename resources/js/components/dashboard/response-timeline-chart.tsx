import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { ChartContainer, ChartTooltip, ChartTooltipContent } from "@/components/ui/chart"
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from "recharts"
import { type TimelineData } from "@/types/dashboard"

const generateTimelineData = (): TimelineData[] => {
  const data: TimelineData[] = []
  const today = new Date()

  // Generate 30 days of data
  for (let i = 29; i >= 0; i--) {
    const date = new Date(today)
    date.setDate(date.getDate() - i)

    // Most days have 0 responses, but June 22nd has all the activity
    const isActiveDay = i === 7 // June 22nd relative to today

    data.push({
      date: date.toLocaleDateString('en-US', { month: 'short', day: '2-digit' }),
      'gemini-2.0-flash': isActiveDay ? 10 : 0,
      'gpt-4o-search': isActiveDay ? 10 : 0,
      'mistral-small-latest': isActiveDay ? 10 : 0,
    })
  }

  return data
}

const defaultData = generateTimelineData()

const chartConfig = {
  "gemini-2.0-flash": {
    label: "Gemini 2.0 Flash",
    color: "#3B82F6", // blue-500
  },
  "gpt-4o-search": {
    label: "GPT-4o Search",
    color: "#10B981", // emerald-500
  },
  "mistral-small-latest": {
    label: "Mistral Small",
    color: "#8B5CF6", // violet-500
  },
}

interface ResponseTimelineChartProps {
  data?: TimelineData[]
}

export function ResponseTimelineChart({ data = defaultData }: ResponseTimelineChartProps) {
  return (
    <Card className="bg-card text-card-foreground flex flex-col gap-6 rounded-xl shrink-0 ring-muted/60 border shadow-sm ring-3">
      <CardHeader className="@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-5 pt-4 has-[data-slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-2">
        <CardTitle className="leading-none font-semibold pt-2">
          Response Count by Model Over Time
        </CardTitle>
        <CardDescription className="text-muted-foreground text-sm">
          The number of responses generated by each model over time.
        </CardDescription>
      </CardHeader>
      <CardContent className="px-5 pb-4 h-80 w-full">
        <ChartContainer config={chartConfig} className="w-full relative h-full">
          <BarChart
            data={data}
            margin={{ top: 5, right: 0, left: 0, bottom: 5 }}
          >
            <CartesianGrid strokeDasharray="3 3" className="stroke-gray-200 stroke-1 dark:stroke-gray-800" />
            <XAxis
              dataKey="date"
              className="text-xs fill-gray-500 dark:fill-gray-500 mt-4"
              tick={{ fontSize: 12 }}
            />
            <YAxis className="text-xs fill-gray-500 dark:fill-gray-500" />
            <ChartTooltip content={<ChartTooltipContent />} />
            <Bar
              dataKey="gemini-2.0-flash"
              stackId="models"
              fill="var(--color-gemini-2.0-flash)"
              className="fill-blue-500"
            />
            <Bar
              dataKey="gpt-4o-search"
              stackId="models"
              fill="var(--color-gpt-4o-search)"
              className="fill-emerald-500"
            />
            <Bar
              dataKey="mistral-small-latest"
              stackId="models"
              fill="var(--color-mistral-small-latest)"
              className="fill-violet-500"
            />
          </BarChart>
        </ChartContainer>
      </CardContent>
    </Card>
  )
}